from extensions import *
from helpers import *
from seqlib import *
from motifslib import *

# 1.1.5
if run(1):
   seqs = parseSeqsStr('AATTGGCACATCATTATCGATAACGATTCGCCGCATTGCC GGTTAACATCGAATAACTGACACCTGCTCTGGCACCGCTC AATTGGCGGCGGTATAGCCAGATAGTGCCAATAATTTCCT GGTTAATGGTGAAGTGTGGGTTATGGGGAAAGGCAGACTG AATTGGACGGCAACTACGGTTACAACGCAGCAAGAATATT GGTTAACTGTTGTTGCTAACACCGTTAAGCGACGGCAACT AATTGGCCAACGTAGGCGCGGCTTGGCATCTCGGTGTGTG GGTTAAAAGGCGCATCTTACTCTTTTCGCTTTCAAAAAAA')
   iterRandMotifSearch(seqs, 6) |> testVs(parseSeqsStr('CGATAA GGTTAA GGTATA GGTTAA GGTTAC GGTTAA GGCCAA GGTTAA'))
if run(2):
   l = readlines('dataset_161_5.txt')
   [k, _] = parseInts(l[0])
   res = iterRandMotifSearch(parseSeqStrs(l[1:]), k)
   # print res |> sepWithNL
   res |> testVs(parseSeqsStr('TCTAAATCTGGGGTT ACTGCGTTCGAGCTT ACTATATCATAGCTT ACTACCCTCGAGCTT ACTGCTTTCGAGCTT ACTATATTCGAGAAC CCTATATTCGAGCGC ACTATTGACGAGCTT AACGTATTCGAGCTT CATATATTCGAGCTG ACTATATTCCGCCTT ACTATATTCGACAGT ACTATACATGAGCTT ACTATATTAAGGCTT ACTATCCCCGAGCTT ACTATAGAAGAGCTT ACTACCATCGAGCTT CGAATATTCGAGCTT ACTATATTCGTAGTT ACGTGATTCGAGCTT'))

if run(3):
   k = 15
   n = 10 # num seqs 
   l = 600 # seq len

   # 1.2.3 - probability of capturing a 15-mer in n l-length nucleotides
   p1 = (l - k) / (l+1 - k) # probability of not capturing the kmer in one string
   pr = p1 ** n # p1 * p2 ... * p10, where all probabilities are same
   res = 1.0 - pr
   str(res) |> testVs('0.0169344')

   # 1.2.4 - probability of capturing 2 15-mer in n l-length nucleotides
   res = 1.0 - p1**n - (1.0/(l+1-k) * p1**(n-1) * n)
   str(res) |> testVs('0.000129857')


# 1.3.4
if run(4):
   seqs = parseSeqsStr('CGCCCCTCTCGGGGGTGTTCAGTAACCGGCCA GGGCGAGGTATGTGTAAGTGCCAAGGTGCCAG TAGTACCGAGACCGAAAGAAGTATACAGGCGT TAGATCAAGTTTCAGGTGCACGTCGGTGAACC AATCCACCAGCTCCACGTGCAATGTTGGCCTA')
   gibbsSampler(seqs, 8) |> testColl(parseSeqsStr('TCTCGGGG CCAAGGTG TACAGGCG TTCAGGTG TCCACGTG'))

if run(5):
   l = readlines('dataset_163_4.txt')
   [k, _, iters] = parseInts(l[0])
   # gibbsSampler(parseSeqStrs(l[1:]), k) |> sepWithNL |> echo
   gibbsSampler(parseSeqStrs(l[1:]), k) |> testColl(parseSeqsStr('CAACGATCACAGGTT CCTGCTTTCCGGGTT AGTAGATTCCGGGTA CCTAATCTCCGGGTT CCTAGATTCCGGTAG CCTACGATCCGGGTT CAGTGATTCCGGGTT CCTTATTTCCGGGTT CCTAGATAAGGGGTT CCTAGATTCCGCACT CCTAGGGCCCGGGTT CCTAGGGCCCGGGTT CCTAGATTCCCTATT CCTAGATTCTCCGTT GCTAGATTCCGGGAC CCTAGATTGATGGTT CCTAGAAAACGGGTT CCCGAATTCCGGGTT CCTAGACGTCGGGTT GGGAGATTCCGGGTT'))
